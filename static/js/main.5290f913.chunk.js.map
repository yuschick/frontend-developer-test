{"version":3,"sources":["components/DataTable/TableActions.js","components/ScreenReaderText.js","types/sortDirection.js","components/DataTable/DataTable.js","components/DataTable/index.js","lib/api/data.js","lib/api/index.js","utils/formatTableRowData.js","routes/App/UsersTable.js","routes/App/ProjectsTable.js","routes/App/App.js","routes/App/index.js","index.js"],"names":["TableActions","fetch","loading","error","complete","isMounted","useRef","useEffect","current","ActionsContainer","data-test-id","CircularProgress","Typography","color","role","align","Button","variant","onClick","styled","div","props","func","isRequired","bool","Hidden","span","ScreenReaderText","as","children","SortDirection","Object","freeze","asc","desc","InvertSortDirection","useStyles","makeStyles","table","minWidth","display","justifyContent","maxWidth","DataTable","fetchData","summary","initialSortBy","initialSort","title","data","useState","tableData","setTableData","sortBy","setSortBy","sortDirection","setSortDirection","classes","rows","length","sorted","sort","a","b","itemA","value","toString","itemB","localeCompare","TableContainer","component","Paper","Table","className","TableHead","TableRow","cols","map","col","TableCell","key","uuidv4","sortable","TableSortLabel","active","id","disabled","direction","label","TableBody","colSpan","Box","py","row","keys","k","i","usersDiff","timestamp","Date","getTime","diff","field","oldValue","newValue","projectsDiff","resolveOrRejectCollection","timesCalled","collection","Promise","resolve","reject","setTimeout","sliceStart","Math","ceil","sliceEnd","totalItems","hasItems","clearTimeout","code","slice","limit","offset","total","getProjectsDiff","getUsersDiff","formatTableRowData","d","date","format","old","new","UsersTable","setLoading","setComplete","setError","setData","useCallback","api","result","concat","ProjectsTable","StyledPage","main","App","data-test-class","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"2jBAKA,IAAMA,EAAe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvCC,EAAYC,kBAAO,GAOzB,OALAC,qBAAU,WACJF,IACJA,EAAUG,SAAU,KACnB,CAACH,IAGF,kBAACI,EAAD,CAAkBC,eAAa,iBAC5BL,GAAaH,EACZ,kBAACS,EAAA,EAAD,CAAkBD,eAAa,0BAE/B,kBAAC,WAAD,KACGP,GACC,kBAACS,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACLC,MAAM,SACNL,eAAa,4BAJf,yDASDN,EACC,kBAACQ,EAAA,EAAD,CACEF,eAAa,8BACbK,MAAM,UAFR,8BAOA,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRJ,MAAM,UACNK,QAASjB,EACTS,eAAa,8BAEZP,EAAQ,QAAU,gBAS3BM,EAAmBU,IAAOC,IAAV,KAOtBpB,EAAaqB,MAAQ,CACnBpB,MAAOqB,OAAKC,WACZrB,QAASsB,OAAKD,WACdpB,MAAOqB,OAAKD,WACZnB,SAAUoB,OAAKD,YAGFvB,Q,4NC/Df,I,EAIMyB,EAASN,IAAOO,KAAV,KAUGC,EAdU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC9B,OAAO,kBAACJ,EAAD,CAAQG,GAAIA,GAAKC,I,QCJbC,EAAgBC,OAAOC,OAAO,CAAEC,IAAK,MAAOC,KAAM,SAClDC,EAAsBJ,OAAOC,QAAP,KAAAD,OAAA,IAAAA,CAAA,EAChCD,EAAcG,IAAMH,EAAcI,MADFH,OAAA,IAAAA,CAAA,EAEhCD,EAAcI,KAAOJ,EAAcG,KAFH,ICuI7BG,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,KAEZrC,QAAS,CACPsC,QAAS,OACTC,eAAgB,SAChBC,SAAU,kDC7ICC,ED4BG,SAAC,GAUZ,IATLC,EASI,EATJA,UACA1C,EAQI,EARJA,QACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAyC,EAKI,EALJA,QACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,KACI,EAC8BC,mBAAS,IADvC,mBACGC,EADH,KACcC,EADd,OAEwBF,mBAASJ,GAFjC,mBAEGO,EAFH,KAEWC,EAFX,OAGsCJ,mBAASH,GAH/C,mBAGGQ,EAHH,KAGkBC,EAHlB,KAIEC,EAAUrB,IAiBhB,OAfA7B,qBAAU,WACR,GAAK0C,EAAKS,KAAKC,QAAWN,EAA1B,CAEA,IAAMO,EAAS,YAAIX,EAAKS,MAAMG,MAAK,SAACC,EAAGC,GACrC,IAAMC,EAAQF,EAAET,GAAQY,MAAMC,WACxBC,EAAQJ,EAAEV,GAAQY,MAAMC,WAE9B,OAAOX,IAAkBzB,EAAcI,KACnCiC,EAAMC,cAAcJ,GACpBA,EAAMI,cAAcD,MAG1Bf,EAAaQ,MACZ,CAACX,EAAMM,EAAeF,IAGvB,kBAAC,WAAD,KACE,kBAACgB,EAAA,EAAD,CACEC,UAAWC,IACX1B,QAASA,EACTnC,eAAa,cAEb,kBAAC8D,EAAA,EAAD,CAAOC,UAAWhB,EAAQnB,OACxB,kBAAC,EAAD,CAAkBV,GAAG,WAAWoB,GAChC,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG1B,EAAK2B,KAAKC,KAAI,SAACC,GAAD,OACb,kBAACC,EAAA,EAAD,CAAWC,IAAKC,eACbH,EAAII,SACH,kBAACC,EAAA,EAAD,CACEC,OAAQ/B,IAAWyB,EAAIO,GACvBC,SAAUpF,EACVqF,UAAWhC,EACXrC,QAAS,WACPmC,IAAWyB,EAAIO,IAAM/B,EAAUwB,EAAIO,IACnC7B,EAAiBrB,EAAoBoB,KAEvC7C,eAAA,0BAECoE,EAAIU,MACL,kBAAC,EAAD,oBAEU,YAFV,MAMFV,EAAIU,YAMd,kBAACC,EAAA,EAAD,MACItC,EAAUQ,QAAUzD,GACpB,kBAACyE,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAWW,QAASzC,EAAK2B,KAAKjB,QAC5B,kBAACgC,EAAA,EAAD,CAAKlB,UAAWhB,EAAQvD,QAAS0F,GAAI,GACnC,kBAACjF,EAAA,EAAD,CAAkBD,eAAa,0BAKtCyC,EAAU0B,KAAI,SAACgB,GAAD,OACb,kBAAClB,EAAA,EAAD,CAAUK,IAAKC,eACZlD,OAAO+D,KAAKD,GAAKhB,KAAI,SAACkB,EAAGC,GAAJ,OACpB,kBAACjB,EAAA,EAAD,CACEC,IAAKC,cACLvE,eAAA,0BAAiCuC,EAAK2B,KAAKoB,GAAGX,KAE7CQ,EAAIE,GAAGP,mBASnBvC,EAAKS,KAAKC,QACX,kBAAC,EAAD,CACE1D,MAAO2C,EACP1C,QAASA,EACTC,MAAOA,EACPC,SAAUA,MEjIP6F,EAAY,CACvB,CACEZ,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,OAAQC,SAAU,WAGjD,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,QAASC,SAAU,UAGlD,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,OAAQC,SAAU,YAGjD,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,SAAUC,SAAU,aAGnD,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,UAAWC,SAAU,wCAGpD,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,qCAAsCC,SAAU,wCAG/E,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,oBAAqBC,SAAU,SAG9D,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,MAAOC,SAAU,QAGhD,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,qCAAsCC,SAAU,2BAG/E,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,wBAAyBC,SAAU,wBAKvDC,EAAe,CAC1B,CACEpB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,gBAAiBC,SAAU,mBAG1D,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,cAAeC,SAAU,mBAGxD,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,gBAAiBC,SAAU,+BAG1D,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,4BAA6BC,SAAU,4CAGtE,CACEnB,GAAI,uCACJa,UAAW,IAAIC,KAAK,aAAaC,UACjCC,KAAM,CACJ,CAAEC,MAAO,OAAQC,SAAU,yCAA0CC,SAAU,oBCrG/EE,EAA4B,SAACC,EAAaC,GAAd,OAA6B,WAC7D,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAM1B,EAAK2B,YAAW,WACpBL,GAAe,EACf,IAAMM,EANM,GAMoBC,KAAKC,KAAKR,EAAc,GAAK,GACvDS,EAPM,EAOiBF,KAAKC,KAAKR,EAAc,GAC/CU,EAAaT,EAAWjD,OACxB2D,EAAWL,EAAaI,EAI9B,OAFAE,aAAalC,GAETsB,EAAc,IAAM,EACfI,EAAO,CACZS,KAAM,IACNrH,MAAO,iBAIJ2G,EAAQ,CACbU,KAAM,IACNvE,KAAM2D,EAAWa,MAAMR,EAAYG,GACnCM,MAvBU,EAwBVC,OAAQL,EAAWL,EAAaI,EAChCO,MAAOP,MA1BO,UA4CP,GACbQ,gBAVOnB,EAFW,EAE4BD,GAW9CqB,aALOpB,EAFW,EAE4BT,I,QCzCnC8B,EAAqB,SAAC9E,GAAD,OAChCA,EAAKU,OACDV,EAAK4B,KAAI,SAACmD,GAAD,MAAQ,CACfC,KAAM,CACJzC,MAAO0C,YAAOF,EAAE9B,UAAW,aAC3BjC,MAAO+D,EAAE9B,WAEXb,GAAI,CACFG,MAAOwC,EAAE3C,GACTpB,MAAO+D,EAAE3C,IAEX8C,IAAK,CACH3C,MAAOwC,EAAE3B,KAAK,GAAGE,SACjBtC,MAAO+D,EAAE3B,KAAK,GAAGE,UAEnB6B,IAAK,CACH5C,MAAOwC,EAAE3B,KAAK,GAAGG,SACjBvC,MAAO+D,EAAE3B,KAAK,GAAGG,cAGrB,ICqDS6B,EAnEI,WAAO,IAAD,EACOnF,oBAAS,GADhB,mBAChBhD,EADgB,KACPoI,EADO,OAESpF,oBAAS,GAFlB,mBAEhB9C,EAFgB,KAENmI,EAFM,OAGGrF,oBAAS,GAHZ,mBAGhB/C,EAHgB,KAGTqI,EAHS,OAICtF,mBAAS,IAJV,mBAIhBD,EAJgB,KAIVwF,EAJU,KAMjB7F,EAAY8F,sBAAW,sBAAC,4BAAA5E,EAAA,6DAC5BwE,GAAW,GACXE,GAAS,GAFmB,kBAKLG,EAAIb,eALC,QAKpBc,EALoB,QAOnB3F,KAAKU,OACR8E,GAAQ,SAACxF,GAAD,OAAUA,EAAK4F,OAAOD,EAAO3F,SACrCsF,GAAY,GATU,gDAW1BC,IAAW,EAAD,IAXgB,yBAa1BF,GAAW,GAbe,4EAe3B,IAOH,OALA/H,qBAAU,WACJ0C,EAAKU,QACTf,MACC,CAACK,EAAML,IAGR,kBAAC,EAAD,CACEA,UAAWA,EACXI,MAAM,cACNH,QAAQ,qCACR3C,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACV0C,cAAc,OACdC,YAAajB,EAAcI,KAC3Be,KAAM,CACJ2B,KAAM,CACJ,CACES,GAAI,OACJG,MAAO,OACPN,UAAU,GAEZ,CACEG,GAAI,KACJG,MAAO,UACPN,UAAU,GAEZ,CACEG,GAAI,MACJG,MAAO,YACPN,UAAU,GAEZ,CACEG,GAAI,MACJG,MAAO,YACPN,UAAU,IAGdxB,KAAMqE,EAAmB9E,OCMlB6F,EAnEO,WAAO,IAAD,EACI5F,oBAAS,GADb,mBACnBhD,EADmB,KACVoI,EADU,OAEMpF,oBAAS,GAFf,mBAEnB9C,EAFmB,KAETmI,EAFS,OAGArF,oBAAS,GAHT,mBAGnB/C,EAHmB,KAGZqI,EAHY,OAIFtF,mBAAS,IAJP,mBAInBD,EAJmB,KAIbwF,EAJa,KAMpB7F,EAAY8F,sBAAW,sBAAC,4BAAA5E,EAAA,6DAC5BwE,GAAW,GACXE,GAAS,GAFmB,kBAKLG,EAAId,kBALC,QAKpBe,EALoB,QAOnB3F,KAAKU,OACR8E,GAAQ,SAACxF,GAAD,OAAUA,EAAK4F,OAAOD,EAAO3F,SACrCsF,GAAY,GATU,gDAW1BC,IAAW,EAAD,IAXgB,yBAa1BF,GAAW,GAbe,4EAe3B,IAOH,OALA/H,qBAAU,WACJ0C,EAAKU,QACTf,MACC,CAACK,EAAML,IAGR,kBAAC,EAAD,CACEA,UAAWA,EACXI,MAAM,iBACNH,QAAQ,wCACR3C,QAASA,EACTC,MAAOA,EACPC,SAAUA,EACV0C,cAAc,OACdC,YAAajB,EAAcI,KAC3Be,KAAM,CACJ2B,KAAM,CACJ,CACES,GAAI,OACJG,MAAO,OACPN,UAAU,GAEZ,CACEG,GAAI,KACJG,MAAO,UACPN,UAAU,GAEZ,CACEG,GAAI,MACJG,MAAO,YACPN,UAAU,GAEZ,CACEG,GAAI,MACJG,MAAO,YACPN,UAAU,IAGdxB,KAAMqE,EAAmB9E,O,iLC/DjC,IASM8F,EAAa5H,IAAO6H,KAAV,KCbDC,EDIH,WACV,OACE,kBAACF,EAAD,CAAYrI,eAAa,OACvB,kBAAC,EAAD,CAAYwI,kBAAgB,cAC5B,kBAAC,EAAD,CAAeA,kBAAgB,gB,0+BEJrC,IAAMC,GAAcC,YAAH,KAyCjBC,IAASC,OACP,kBAAC,WAAD,KACE,kBAACH,GAAD,MACA,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.5290f913.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, CircularProgress, Typography } from \"@material-ui/core\";\nimport { bool, func } from \"prop-types\";\n\nconst TableActions = ({ fetch, loading, error, complete }) => {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (isMounted) return;\n    isMounted.current = true;\n  }, [isMounted]);\n\n  return (\n    <ActionsContainer data-test-id=\"table-actions\">\n      {isMounted && loading ? (\n        <CircularProgress data-test-id=\"table-actions-spinner\" />\n      ) : (\n        <Fragment>\n          {error && (\n            <Typography\n              color=\"error\"\n              role=\"alert\"\n              align=\"center\"\n              data-test-id=\"table-actions-text-error\"\n            >\n              We had problems fetching your data. Please try again.\n            </Typography>\n          )}\n          {complete ? (\n            <Typography\n              data-test-id=\"table-actions-text-complete\"\n              align=\"center\"\n            >\n              All historical data shown.\n            </Typography>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={fetch}\n              data-test-id=\"table-actions-button-fetch\"\n            >\n              {error ? \"Retry\" : \"Load more\"}\n            </Button>\n          )}\n        </Fragment>\n      )}\n    </ActionsContainer>\n  );\n};\n\nconst ActionsContainer = styled.div`\n  display: grid;\n  grid-gap: var(--spacing-two);\n  margin: var(--spacing-two) 0;\n  place-items: center;\n`;\n\nTableActions.props = {\n  fetch: func.isRequired,\n  loading: bool.isRequired,\n  error: bool.isRequired,\n  complete: bool.isRequired,\n};\n\nexport default TableActions;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ScreenReaderText = ({ as, children }) => {\n  return <Hidden as={as}>{children}</Hidden>;\n};\n\nconst Hidden = styled.span`\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nexport default ScreenReaderText;\n","export const SortDirection = Object.freeze({ asc: \"asc\", desc: \"desc\" });\nexport const InvertSortDirection = Object.freeze({\n  [SortDirection.asc]: SortDirection.desc,\n  [SortDirection.desc]: SortDirection.asc,\n});\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  shape,\n  arrayOf,\n  string,\n  bool,\n  func,\n  number,\n  oneOfType,\n  oneOf,\n} from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  Box,\n  TableContainer,\n  Paper,\n  Table,\n  TableRow,\n  TableHead,\n  TableCell,\n  TableSortLabel,\n  TableBody,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nimport TableActions from \"./TableActions\";\nimport ScreenReaderText from \"../ScreenReaderText\";\nimport { SortDirection, InvertSortDirection } from \"../../types/sortDirection\";\n\nconst DataTable = ({\n  fetchData,\n  loading,\n  error,\n  complete,\n  summary,\n  initialSortBy,\n  initialSort,\n  title,\n  data,\n}) => {\n  const [tableData, setTableData] = useState([]);\n  const [sortBy, setSortBy] = useState(initialSortBy);\n  const [sortDirection, setSortDirection] = useState(initialSort);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (!data.rows.length || !sortBy) return;\n\n    const sorted = [...data.rows].sort((a, b) => {\n      const itemA = a[sortBy].value.toString();\n      const itemB = b[sortBy].value.toString();\n\n      return sortDirection === SortDirection.desc\n        ? itemB.localeCompare(itemA)\n        : itemA.localeCompare(itemB);\n    });\n\n    setTableData(sorted);\n  }, [data, sortDirection, sortBy]);\n\n  return (\n    <Fragment>\n      <TableContainer\n        component={Paper}\n        summary={summary}\n        data-test-id=\"table-data\"\n      >\n        <Table className={classes.table}>\n          <ScreenReaderText as=\"caption\">{title}</ScreenReaderText>\n          <TableHead>\n            <TableRow>\n              {data.cols.map((col) => (\n                <TableCell key={uuidv4()}>\n                  {col.sortable ? (\n                    <TableSortLabel\n                      active={sortBy === col.id}\n                      disabled={loading}\n                      direction={sortDirection}\n                      onClick={() => {\n                        sortBy !== col.id && setSortBy(col.id);\n                        setSortDirection(InvertSortDirection[sortDirection]);\n                      }}\n                      data-test-id={`table-data-button-sort`}\n                    >\n                      {col.label}\n                      <ScreenReaderText>\n                        Table sorted\n                        {true ? \"ascending\" : \"descending\"}.\n                      </ScreenReaderText>\n                    </TableSortLabel>\n                  ) : (\n                    col.label\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {!tableData.length && loading && (\n              <TableRow>\n                <TableCell colSpan={data.cols.length}>\n                  <Box className={classes.loading} py={2}>\n                    <CircularProgress data-test-id=\"table-data-spinner\" />\n                  </Box>\n                </TableCell>\n              </TableRow>\n            )}\n            {tableData.map((row) => (\n              <TableRow key={uuidv4()}>\n                {Object.keys(row).map((k, i) => (\n                  <TableCell\n                    key={uuidv4()}\n                    data-test-id={`table-data-cell-${data.cols[i].id}`}\n                  >\n                    {row[k].label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {!!data.rows.length && (\n        <TableActions\n          fetch={fetchData}\n          loading={loading}\n          error={error}\n          complete={complete}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  loading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    maxWidth: \"calc(100vw - calc(var(--spacing-three) * 2))\",\n  },\n});\n\nDataTable.propTypes = {\n  fetchData: func.isRequired,\n  loading: bool.isRequired,\n  error: bool.isRequired,\n  complete: bool.isRequired,\n  summary: string.isRequired,\n  initialSortBy: string.isRequired,\n  initialSort: oneOf(Object.keys(SortDirection)).isRequired,\n  title: string.isRequired,\n  data: shape({\n    cols: arrayOf(\n      shape({\n        label: string.isRequired,\n        sortable: bool.isRequired,\n      })\n    ).isRequired,\n    rows: arrayOf(\n      shape({\n        date: shape({\n          value: oneOfType([string, number]).isRequired,\n          label: string.isRequired,\n        }),\n        id: shape({\n          value: oneOfType([string, number]).isRequired,\n          label: string.isRequired,\n        }),\n        old: shape({\n          value: oneOfType([string, number]).isRequired,\n          label: string.isRequired,\n        }),\n        new: shape({\n          value: oneOfType([string, number]).isRequired,\n          label: string.isRequired,\n        }),\n      })\n    ),\n  }).isRequired,\n};\n\nexport default DataTable;\n","import DataTable from \"./DataTable\";\n\nexport default DataTable;\n","export const usersDiff = [\n  {\n    id: 'e28d290a-a2f2-48c2-9001-ff43884e271b',\n    timestamp: new Date('2020/2/14').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'John', newValue: 'Bruce' },\n    ],\n  },\n  {\n    id: '8bd0166f-f0c6-48fd-9fcd-a17e76eb1e92',\n    timestamp: new Date('2020/2/15').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Bruce', newValue: 'Nick' },\n    ],\n  },\n  {\n    id: '0a75a2b3-be64-4aeb-ba4c-8ddb913791ac',\n    timestamp: new Date('2020/2/16').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Nick', newValue: 'Michel' },\n    ],\n  },\n  {\n    id: 'bf008d15-3d34-422e-9041-039c59d9ed3d',\n    timestamp: new Date('2020/2/17').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Michel', newValue: 'Michael' },\n    ],\n  },\n  {\n    id: '2a83c13c-c040-4672-9b7b-c004ce614264',\n    timestamp: new Date('2020/2/18').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Michael', newValue: 'Constantine Prescott Nathaniel Jr.' },\n    ],\n  },\n  {\n    id: 'bb177085-7340-4cf7-a892-f436f20951e2',\n    timestamp: new Date('2020/2/19').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Constantine Prescott Nathaniel Jr.', newValue: 'Constantine Prescott Nathaniel Sr.' },\n    ],\n  },\n  {\n    id: '67f06020-95b3-484d-8713-36584c79e94a',\n    timestamp: new Date('2020/2/22').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Constantine P. N.', newValue: 'Joe' },\n    ],\n  },\n  {\n    id: '57c1fd5d-a11c-433c-8820-a79bbffe6e60',\n    timestamp: new Date('2020/2/23').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Joe', newValue: 'Mo' },\n    ],\n  },\n  {\n    id: 'e9bccea8-bb28-4d0e-9bac-4c09122ad5b4',\n    timestamp: new Date('2020/2/20').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Constantine Prescott Nathaniel Sr.', newValue: 'Constantine P. N. Sr.' },\n    ],\n  },\n  {\n    id: '08283466-883a-4506-90ac-ab85c3f27ab3',\n    timestamp: new Date('2020/2/21').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Constantine P. N. Sr.', newValue: 'Constantine P. N.' },\n    ],\n  },\n];\n\nexport const projectsDiff = [\n  {\n    id: '01fa742c-b2d0-416a-9394-a0a5dc8bc13e',\n    timestamp: new Date('2020/2/15').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Angrier Birds', newValue: 'Angry Birds 2' },\n    ],\n  },\n  {\n    id: '7ba38998-0247-4de9-a3d8-e20cf736e834',\n    timestamp: new Date('2020/2/14').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Angry Birds', newValue: 'Angrier Birds' },\n    ],\n  },\n  {\n    id: 'c72d77f1-6e0b-473e-a600-7295d0822e54',\n    timestamp: new Date('2020/2/16').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Angry Birds 2', newValue: 'Angry Birds 2: The sequel' },\n    ],\n  },\n  {\n    id: '90b9e1ad-7556-44f8-8278-c723824de782',\n    timestamp: new Date('2020/2/17').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Angry Birds 2: The sequel', newValue: 'Angry Birds 2: The return of the birds' },\n    ],\n  },\n  {\n    id: 'fcd064f9-687e-4bd4-9c8f-93361610cc58',\n    timestamp: new Date('2020/2/18').getTime(),\n    diff: [\n      { field: 'name', oldValue: 'Angry Birds 2: The return of the birds', newValue: 'Angry Birds 2' },\n    ],\n  },\n];\n","import { usersDiff, projectsDiff } from \"./data\";\n\nconst DEFAULT_DELAY = 2000;\nconst PAGE_SIZE = 3;\n\nconst resolveOrRejectCollection = (timesCalled, collection) => () => {\n  return new Promise((resolve, reject) => {\n    const id = setTimeout(() => {\n      timesCalled += 1;\n      const sliceStart = PAGE_SIZE * (Math.ceil(timesCalled / 2) - 1);\n      const sliceEnd = PAGE_SIZE * Math.ceil(timesCalled / 2);\n      const totalItems = collection.length;\n      const hasItems = sliceStart < totalItems;\n\n      clearTimeout(id);\n\n      if (timesCalled % 2 === 0) {\n        return reject({\n          code: 500,\n          error: \"Uknown error\",\n        });\n      }\n\n      return resolve({\n        code: 200,\n        data: collection.slice(sliceStart, sliceEnd),\n        limit: PAGE_SIZE,\n        offset: hasItems ? sliceStart : totalItems,\n        total: totalItems,\n      });\n    }, DEFAULT_DELAY);\n  });\n};\n\nconst getProjectsDiff = () => {\n  let timesCalled = 0;\n\n  return resolveOrRejectCollection(timesCalled, projectsDiff);\n};\n\nconst getUsersDiff = () => {\n  let timesCalled = 0;\n\n  return resolveOrRejectCollection(timesCalled, usersDiff);\n};\n\nexport default {\n  getProjectsDiff: getProjectsDiff(),\n  getUsersDiff: getUsersDiff(),\n};\n","import format from \"date-fns/format\";\n\nexport const formatTableRowData = (data) =>\n  data.length\n    ? data.map((d) => ({\n        date: {\n          label: format(d.timestamp, \"yyyy-MM-d\"),\n          value: d.timestamp,\n        },\n        id: {\n          label: d.id,\n          value: d.id,\n        },\n        old: {\n          label: d.diff[0].oldValue,\n          value: d.diff[0].oldValue,\n        },\n        new: {\n          label: d.diff[0].newValue,\n          value: d.diff[0].newValue,\n        },\n      }))\n    : [];\n","import React, { useState, useCallback, useEffect } from \"react\";\n\nimport DataTable from \"../../components/DataTable\";\nimport api from \"../../lib/api\";\n\nimport { SortDirection } from \"../../types/sortDirection\";\nimport { formatTableRowData } from \"../../utils/formatTableRowData\";\n\nconst UsersTable = () => {\n  const [loading, setLoading] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(false);\n\n    try {\n      const result = await api.getUsersDiff();\n\n      result.data.length\n        ? setData((data) => data.concat(result.data))\n        : setComplete(true);\n    } catch (err) {\n      setError(!!err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (data.length) return;\n    fetchData();\n  }, [data, fetchData]);\n\n  return (\n    <DataTable\n      fetchData={fetchData}\n      title=\"Users table\"\n      summary=\"A table of historical user updates\"\n      loading={loading}\n      error={error}\n      complete={complete}\n      initialSortBy=\"date\"\n      initialSort={SortDirection.desc}\n      data={{\n        cols: [\n          {\n            id: \"date\",\n            label: \"Date\",\n            sortable: true,\n          },\n          {\n            id: \"id\",\n            label: \"User ID\",\n            sortable: false,\n          },\n          {\n            id: \"old\",\n            label: \"Old Value\",\n            sortable: false,\n          },\n          {\n            id: \"new\",\n            label: \"New Value\",\n            sortable: false,\n          },\n        ],\n        rows: formatTableRowData(data),\n      }}\n    />\n  );\n};\n\nexport default UsersTable;\n","import React, { useState, useCallback, useEffect } from \"react\";\n\nimport DataTable from \"../../components/DataTable\";\nimport api from \"../../lib/api\";\n\nimport { SortDirection } from \"../../types/sortDirection\";\nimport { formatTableRowData } from \"../../utils/formatTableRowData\";\n\nconst ProjectsTable = () => {\n  const [loading, setLoading] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(false);\n\n    try {\n      const result = await api.getProjectsDiff();\n\n      result.data.length\n        ? setData((data) => data.concat(result.data))\n        : setComplete(true);\n    } catch (err) {\n      setError(!!err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (data.length) return;\n    fetchData();\n  }, [data, fetchData]);\n\n  return (\n    <DataTable\n      fetchData={fetchData}\n      title=\"Projects table\"\n      summary=\"A table of historical project updates\"\n      loading={loading}\n      error={error}\n      complete={complete}\n      initialSortBy=\"date\"\n      initialSort={SortDirection.desc}\n      data={{\n        cols: [\n          {\n            id: \"date\",\n            label: \"Date\",\n            sortable: true,\n          },\n          {\n            id: \"id\",\n            label: \"User ID\",\n            sortable: false,\n          },\n          {\n            id: \"old\",\n            label: \"Old Value\",\n            sortable: false,\n          },\n          {\n            id: \"new\",\n            label: \"New Value\",\n            sortable: false,\n          },\n        ],\n        rows: formatTableRowData(data),\n      }}\n    />\n  );\n};\n\nexport default ProjectsTable;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport UsersTable from \"./UsersTable\";\nimport ProjectsTable from \"./ProjectsTable\";\n\nconst App = () => {\n  return (\n    <StyledPage data-test-id=\"app\">\n      <UsersTable data-test-class=\"app-table\" />\n      <ProjectsTable data-test-class=\"app-table\" />\n    </StyledPage>\n  );\n};\n\nconst StyledPage = styled.main`\n  display: grid;\n  grid-gap: var(--spacing-three);\n  padding: var(--spacing-two) var(--spacing-three);\n`;\n\nexport default App;\n","import App from \"./App\";\n\nexport default App;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport App from \"./routes/App\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --spacing-unit: 8px;\n    --spacing-one: 8px;\n    --spacing-two: 16px;\n    --spacing-three: 24px;\n\n    --color-light-primary: #e6e6e6;\n    --color-dark-primary: #121212;\n\n    --font-primary: 'Raleway', sans-serif;\n  }\n\n  * {\n    border: 0;\n    box-sizing: border-box;\n    font-size: 100%;\n    margin: 0;\n    padding: 0;\n\t  vertical-align: baseline\n  }\n\n  html, body {\n    -webkit-font-smoothing: antialiased;\n    -webkit-text-size-adjust: none;\n\n    background: var(--color-light-primary);\n    background-image: url(\"https://www.transparenttextures.com/patterns/dark-dotted-2.png\");\n    backface-visibility: hidden;\n    color: --color-dark-primary;\n    font-family: var(--font-primary);\n    font-size: min(max(16px, 2vw), 18px);\n    font-weight: 400;\n    line-height: 1.75;\n\n    @supports(font-size: clamp(1rem, 1vw, 1rem)) {\n      font-size: clamp(16px, 2vw, 18px);\n    }\n  }\n`;\n\nReactDOM.render(\n  <Fragment>\n    <GlobalStyle />\n    <App />\n  </Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}